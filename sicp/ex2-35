
(load "ex2-33")
(define (count-leaves t)
    (accumulate (lambda (x y)
                        (if (pair? x)
                            (+ (count-leaves x) y)
                            (+ y 1)
                        )
                )
                0
                t
    )
)

(define (count-leaves t)
    (accumulate +
                0
                (map (lambda (x)
                             (if (pair? x)
                                 (count-leaves x)
                                 1))
                     t
                )
    )
)

(count-leaves (list 1 (list 2 3)))
(count-leaves (list 1 (list 2 (list 3 4))))
(count-leaves (list (list 0 1) (list 2 3)))
(count-leaves (list (list 0 1) (list 2 (list 3 4))))

