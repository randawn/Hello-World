
(define (product term a next b)
    (if (> a b)
        1
        (* (term a)
           (product term (next a) next b))
    )
)

(define (factorial n)
    (product (lambda (x) x) 1 (lambda (x) (+ x 1)) n)
)

(factorial 3)

(define (get-pi n)
    (define (f n)
        (define (g n)
            (+ (* n 2) 1)
        )
        (/ (* (- (g n) 1) (+ (g n) 1)) (* (g n) (g n)))
    )
    (define (inc n)
        (+ n 1)
    )
    (* (product f 1 inc n) 4.0)
)

(get-pi 1000)

; 1-31 b)
(define (product term a next b)
    (define (iter a result)
        (if (> a b)
            result
            (iter (next a) (* (term a) result))
        )
    )
    (iter a 1)
)

(get-pi 10000)

