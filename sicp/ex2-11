
(load "ex2-7")

(define (mul-interval x y)
    (define (get-interval4 a b c d)
        (make-interval (* a b)
                       (* c d))
    )
    (let ((lx (lower-bound x))
          (ux (upper-bound x))
          (ly (lower-bound y))
          (uy (upper-bound y))
         )
    (cond ((and (> lx 0) (> ly 0)) (get-interval4 lx ly ux uy))
          ((and (> lx 0) (< uy 0)) (get-interval4 ux ly lx uy))
          ((> lx 0) )              (get-interval4 ux ly ux uy))
          ((and (< ux 0) (< uy 0)) (get-interval4 ux uy lx ly))
          ((and (< ux 0) (> ly 0)) (get-interval4 lx uy ux ly))
          ((< ux 0)                (get-interval4 lx uy lx ly))
          ((> ly 0)                (get-interval4 lx uy ux uy))
          ((< uy 0)                (get-interval4 ux ly lx uy))
          (else                    (make-interval (min (* lx uy) (* ux ly))
                                                  (max (* lx ly) (* ux uy))))
    )
    )
)

