
(load "ex2-61")
(define (intersection-set set1 set2)
    (cond ((or (null? set1) (null? set2)) '())
          ((= (car set1) (car set2))
               (cons (car set1)
                     (intersection-set (cdr set1) (cdr set2))
               )
          )
          ((< (car set1) (car set2))
               (intersection-set (cdr set1) set2)
          )
          ((> (car set1) (car set2))
               (intersection-set set1 (cdr set2))
          )
    )
)
(define (union-set set1 set2)
    (if (null? set1)
        set2
        (union-set (cdr set1)
                   (adjoin-set (car set1) set2)
        )
    )
)
(define (union-set set1 set2)
    (cond ((null? set1) set2)
          ((null? set2) set1)
          ((= (car set1) (car set2))
               (cons (car set1)
                     (union-set (cdr set1) (cdr set2))
               )
          )
          ((< (car set1) (car set2))
               (cons (car set1)
                     (union-set (cdr set1) set2)
               )
          )
          ((> (car set1) (car set2))
               (cons (car set2)
                     (union-set set1 (cdr set2))
               )
          )
    )
)

(union-set '(3 4 10) '(0 1 7))

