
(load "ex1-16")
;(load "ex1-21")
;(load "ex1-22")

(define (startPrime n time)
    (if (fast-prime? n 1)
        (printIt n (- (getTime) time))
        #f
    )
)

(define (expmod base exp m)
    (cond ((= exp 0) 1)
          ((even? exp) (remainder (square (expmod base (/ exp 2) m))
                                   m))
          (else (remainder (* base (expmod base (- exp 1) m))
                            m))
    )
)

(define (fermat-test n)
    (define (try a)
        (= (expmod a n n) a)
    )
;    (try (+ 1 (random (- n 1))))
    (try (- n 1))
)

(define (fast-prime? n times)
    (cond ((= times 0) true)
          ((fermat-test n) (fast-prime? n (- times 1)))
          (else false)
    )
)


