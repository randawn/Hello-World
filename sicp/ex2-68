
(load "ex2-67")
(define (encode message tree)
    (if (null? message)
        '()
        (append (encode-symbol (car message) tree)
                (encode (cdr message) tree)
        )
    )
)

(define (encode-symbol c tree)
    (define (encode-1 sym current-branch bits)
        (cond ((null? current-branch) #f)
              ((leaf? current-branch)
                   (if (eq? c (symbol-leaf current-branch))
                        bits
                        #f
                   )
              )
              (else (or (encode-1 sym (left-branch current-branch) (cons 0 bits))
                        (encode-1 sym (right-branch current-branch) (cons 1 bits))
                    )
              )
        )
    )
    (trace encode-1)
    (if (pair? (encode-1 c tree '()))
        (reverse (encode-1 c tree '()))
        (error "NO SYMBOL " c)
    )
)

;(encode '(a d a b b c a) sample-tree)
(encode '(a) sample-tree)

