
(load "ex1-24")


; miller rabin
(define (mr-test a n)
    ( if (and (not (= a 1))
              (not (= a (- n 1)))
              (= (remainder (square a) n) 1))
          0
          (square a)
    )
)

(define (expmod base exp m)
    (cond ((= exp 0) 1)
          ((even? exp) (remainder (mr-test (expmod base (/ exp 2) m) m)
                                   m))
          (else (remainder (* base (expmod base (- exp 1) m))
                            m))
    )
)

(define (fermat-test n)
    (define (try a)
        (= (expmod a (- n 1) n) 1)
    )
    (try (+ 1 (random (- n 1))))
)

(fast-prime? 561  10)
(fast-prime? 1105 10)
(fast-prime? 1729 10)
(fast-prime? 2465 10)
(fast-prime? 2821 10)
(fast-prime? 1999 10)
(fast-prime? 19999 1)

