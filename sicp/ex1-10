
;Ackermann

(define (A x y)
    (cond ((= y 0) 0)
          ((= x 0) (* 2 y))
          ((= y 1) 2)
          (else (A (- x 1)
                   (A x (- y 1))))))

(A 1 10)
;2^10=1024
(expt 2 10)

(A 2 4)
;2^(4^2)
(expt 2 (expt 4 2))

;(trace A)
(A 3 3)
;2^(3^3)
(expt 2 (expt 3 3))
;2^(2^(2^2))
(expt 2 (expt 2 (expt 2 2)))

(define (f n) (A 0 n))
;f(x, y) = 2*y
(define (g n) (A 1 n))
;f(x, y) = f(x-1, f(x, y-1)) = f(0, f(1, y-1)) = f(0, f(0, f(0, f(1, y-1))) = ... =
;f(0, f(0, f(0, ... , f(0, f(1, 1))))) = 
;f(0, f(0, f(0, ... , f(0, 2)))) = 
;2^n
(define (h n) (A 2 n))
;f(x, y) = f(x-1, f(x, y-1)) = f(1, f(2, y-1)) = f(1, f(1, f(2, y-1)))) = ... =
;f(1, f(1, f(1, ... , f(1, f(2, 1))))) =
;f(1, f(1, f(1, ... , f(1, 2)))) =
;(define (h n) (A 3 n))
;f(x, y) = f(x-1, f(x, y-1)) = f(2, f(3, y-1)) = f(2, f(2, f(3, y-1)))) = ... =
;f(2, f(2, f(2, ... , f(2, f(3, 1))))) =
;f(2, f(2, f(2, ... , f(2, 2)))) =
;2^(2^(2^2)) (repeat n time)
(define (k n) (* 5 n n))
;f(n) = 5*(n^2)

